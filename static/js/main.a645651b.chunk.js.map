{"version":3,"sources":["List.jsx","Alert.jsx","App.js","reportWebVitals.js","index.js"],"names":["List","items","removeItem","editItem","className","map","item","id","title","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","filter","specificItem","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a645651b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FaEdit, FaTrash } from 'react-icons/fa';\r\n\r\nconst List = ({ items, removeItem,editItem }) => {\r\n\r\n    return (\r\n        <div className='grocery-list'>\r\n            {items.map((item)=> {\r\n                const {id, title} = item;\r\n                return (\r\n                    <article key={id} className='grocery-item'>\r\n                    <p className='title'> {title} </p>\r\n                    <div className='btn-container'>\r\n                        <button className='edit-btn' type='button' onClick={()=> editItem(id)}>\r\n                            <FaEdit />\r\n                        </button>\r\n                        <button onClick={()=> removeItem(id)} className='delete-btn' type='button'>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                </article>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default List;","import React, { useEffect } from 'react';\r\n\r\nconst Alert = ({type,msg, removeAlert,list}) => {\r\n\r\n    useEffect(()=> {\r\n        const timeout = setTimeout(()=> {\r\n            removeAlert()\r\n        },3000)\r\n        return () => clearTimeout(timeout)\r\n        },[list])\r\n\r\n    return (\r\n        \r\n        <p className={`alert alert-${type}`}> {msg} </p>\r\n    )\r\n   \r\n}\r\n\r\nexport default Alert;\r\n","import React, { useEffect, useState } from 'react';\nimport List from './List';\nimport Alert from './Alert'\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list');\n  if(list) {\n    return JSON.parse(localStorage.getItem('list'))\n  }\n  else {\n    return []\n  }\n}\n\n\nfunction App() {\n\n  const [name,setName] = useState('');\n  const [list,setList] = useState(getLocalStorage());\n  const [isEditing,setIsEditing] = useState(false);\n  const [editID,setEditID] = useState(null);\n  const [alert,setAlert] = useState({show: true,msg:'', type:''});\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if(!name) {\n      showAlert(true,'danger','please enter value')\n    } else if(name && isEditing) {\n      setList(list.map((item)=>{ \n        if(item.id === editID) {\n          return {...item, title: name}\n        }\n\n\n        return item\n      }))\n      setName('');\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(true,'success','value has changed')\n    } else {\n      showAlert(true,'success','item added to the list')\n      const newItem = {id: new Date().getTime().toString(),title:name};\n      setList([...list,newItem])\n      setName('')\n    }\n  }\n\n  const showAlert = (show=false,type=\"\",msg=\"\") => {\n    setAlert({show,type,msg})\n  }\n\n  const clearList = () => {\n    showAlert(true,'danger','empy list')\n    setList([])\n  }\n\n  const removeItem = (id) => {\n    showAlert(true,'danger','item removed')\n    setList(list.filter((item)=> item.id !== id))\n  }\n\n  const editItem = (id) => {\n    const specificItem = list.find((item)=> item.id === id);\n    setIsEditing(true);\n    setEditID(id)\n    setName(specificItem.title)\n  }\n\n  useEffect(()=>{\n    localStorage.setItem('list',JSON.stringify(list))\n  },[list])\n\n  return (\n    <div>\n      <section className='section-center'>\n      <form className='grocery-form' onSubmit={handleSubmit}>\n        {alert.show && <Alert {...alert} removeAlert={showAlert} />}\n        <h3>Grocery App</h3>\n        <div className='form-control'>\n          <input type = 'text' className='grocery' placeholder='e.g. eggs' value={name} onChange={(e)=> setName(e.target.value)} />\n          <button type='submit' className='submit-btn'> {isEditing? 'edit' : 'submit'} </button>\n        </div>\n      </form>\n      {list.length > 0 && (\n        <div className='grocery-container'>\n          <List items={list} removeItem={removeItem} list={list} editItem={editItem} />\n          <button className='clear-btn' onClick={clearList}>clear items</button>\n        </div>\n      )\n      }\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}